plugins {
    id 'java-library'
}

archivesBaseName = "${rootProject.name}-core"

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.code.gson:gson:2.11.0'
    api 'com.github.oshi:oshi-core:6.8.2'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'org.eclipse.jetty:jetty-server:11.0.15'
    implementation 'org.eclipse.jetty:jetty-servlet:11.0.15'
    implementation 'org.eclipse.jetty:jetty-servlets:11.0.15'
    implementation 'jakarta.websocket:jakarta.websocket-api:2.1.1'
    implementation 'org.eclipse.jetty.websocket:websocket-jakarta-server:11.0.15'
}

tasks.register('generateOPanelProperties') {
    def resourcesDir = sourceSets.main.output.resourcesDir
    def propertiesFile = new File(resourcesDir, "opanel.properties")
    outputs.file(propertiesFile)

    doLast {
        resourcesDir.mkdirs()

        propertiesFile.createNewFile()
        Properties props = new Properties()
        props.setProperty("version", project.version.toString())
        propertiesFile.withWriter('UTF-8') {writer ->
            props.store(writer, "Generated by Gradle")
        }
    }
}

processResources {
    dependsOn generateOPanelProperties
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaLanguageVersion.of(17)
